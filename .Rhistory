yfit <- dnorm(xfit, mean = mean(BaseCEI$altura), sd = sd(BaseCEI$altura))
yfit
yfit <- dnorm(xfit, mean = mean(BaseCEI$altura, na.rm = TRUE), sd = sd(BaseCEI$altura, na.rm = TRUE))
yfit <- yfit * diff(h$mids[1:2]) * length(na.exclude(BaseCEI$altura))
yfit
h <- hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
xfit <- seq(min(na.exclude(BaseCEI$altura)), max(na.exclude(BaseCEI$altura)), length = 100)
yfit <- dnorm(xfit, mean = mean(BaseCEI$altura, na.rm = TRUE), sd = sd(BaseCEI$altura, na.rm = TRUE))
yfit <- yfit * diff(h$mids[1:2]) * length(na.exclude(BaseCEI$altura))
lines(xfit, yfit, col = "royalblue", lwd = 2)
h
plot(h)
lines(xfit, yfit, col = "royalblue", lwd = 2)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
h <- hist(BaseCEI$altura, freq = TRUE, breaks = 6, xlim = c(145,205),  ylim = c(0,25), density = 20)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
xfit <- seq(min(na.exclude(BaseCEI$altura)), max(na.exclude(BaseCEI$altura)), length = 100)
yfit <- dnorm(xfit, mean = mean(BaseCEI$altura, na.rm = TRUE), sd = sd(BaseCEI$altura, na.rm = TRUE))
yfit <- yfit * diff(h$mids[1:2]) * length(na.exclude(BaseCEI$altura))
lines(xfit, yfit, col = "royalblue", lwd = 2)
boxplot(BaseCEI$altura,
ylim = c(150,200),
horizontal = TRUE,
staplewex = 1,
main= "Altura de los estudiantes del CEI \n (Rango intercuartil)",
xlab="Altura en centímetros",
col = "royalblue2",
range = 1.5,
outline = FALSE)
par(mfrow=c(2,1), mar=c(4,5,4,5))
h <- hist(BaseCEI$altura, freq = TRUE, breaks = 6, xlim = c(145,205),  ylim = c(0,25), density = 20)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
xfit <- seq(min(na.exclude(BaseCEI$altura)), max(na.exclude(BaseCEI$altura)), length = 100)
yfit <- dnorm(xfit, mean = mean(BaseCEI$altura, na.rm = TRUE), sd = sd(BaseCEI$altura, na.rm = TRUE))
yfit <- yfit * diff(h$mids[1:2]) * length(na.exclude(BaseCEI$altura))
lines(xfit, yfit, col = "royalblue", lwd = 2)
boxplot(BaseCEI$altura,
ylim = c(150,200),
horizontal = TRUE,
staplewex = 1,
main= "Altura de los estudiantes del CEI \n (Rango intercuartil)",
xlab="Altura en centímetros",
col = "royalblue2",
range = 1.5,
outline = FALSE)
points(BaseCEI$altura,
rep(1,length(BaseCEI$altura)),
cex = 0.5)
points(media_altura,
1,
pch = 21,
cex = 0.5,
bg = "black")
text(media_altura,
1,
labels = formatC(media_altura, format = "f", digits = 2),
pos = 3,
cex = 0.75)
text(x = boxplot.stats(BaseCEI$altura)$stats,
labels = formatC(boxplot.stats(BaseCEI$altura)$stats, format = "f", digits = 0),
y = 1.25,
cex = 0.75,
pos = "3")
outliers = boxplot(BaseCEI$altura, plot=FALSE)$out
points(outliers,
1,
pch = 21,
cex = 0.5,
bg = "black")
text(outliers,
1,
labels = formatC(outliers, format = "f", digits = 2),
pos = 3,
cex = 0.75)
h <- hist(BaseCEI$altura, freq = TRUE, breaks = 6, xlim = c(145,205),  ylim = c(0,25), density = 20)
par(mfrow=c(2,1), mar=c(4,5,4,5))
h <- hist(BaseCEI$altura, freq = TRUE, breaks = 6, xlim = c(145,205),  ylim = c(0,25), density = 20)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
h <- hist(BaseCEI$altura, freq = TRUE, breaks = 6, xlim = c(145,205),  ylim = c(0,25), density = 20)
par(mfrow=c(2,1))
h <- hist(BaseCEI$altura, freq = TRUE, breaks = 6, xlim = c(145,205),  ylim = c(0,25), density = 20)
xfit <- seq(min(na.exclude(BaseCEI$altura)), max(na.exclude(BaseCEI$altura)), length = 100)
xfit
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
par(mfrow=c(2,1), mar=c(4,5,4,5))
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
min(BaseCEI$altura)
min(na.exclude(BaseCEI$altura))
hist(BaseCEI$altura,
freq = TRUE,
breaks = 7,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 10,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 10,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 20,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 30,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 6,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
freq = TRUE,
breaks = 2,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 10,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE)
xfit <- seq(min(na.exclude(BaseCEI$altura))-2, max(na.exclude(BaseCEI$altura)), length = 100)
yfit <- dnorm(xfit, mean = mean(BaseCEI$altura, na.rm = TRUE), sd = sd(BaseCEI$altura, na.rm = TRUE))
yfit <- yfit * diff(h$mids[1:2]) * length(na.exclude(BaseCEI$altura))
lines(xfit, yfit, col = "royalblue", lwd = 2)
xfit <- seq(min(na.exclude(BaseCEI$altura))-2, max(na.exclude(BaseCEI$altura))+2, length = 100)
yfit <- dnorm(xfit, mean = mean(BaseCEI$altura, na.rm = TRUE), sd = sd(BaseCEI$altura, na.rm = TRUE))
yfit <- yfit * diff(h$mids[1:2]) * length(na.exclude(BaseCEI$altura))
lines(xfit, yfit, col = "royalblue", lwd = 2)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 10,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE,
probability = TRUE)
hist(BaseCEI$altura,
freq = TRUE,
breaks = 10,
col = "royalblue2",
main = "Distribución de los estudiantes del CEI por altura \n (Histograma)",
xlim = c(145,205), xlab = "Altura en centímetros",
ylim = c(0,25),
ylab = "Número de estudiantes",
density = 20,
labels = TRUE,
prob = TRUE)
install.packages("rayshader")
library("swirl")
swirl()
?Devices
plot(faithful$eruptions, faithful$waiting)
with(faithful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting, main = "Old Faithful Geyser data"))
title()
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
plot(mean(cars$speed, max(cars$dist, "SWIRL rules")))
plot(mean(cars$speed), max(cars$dist), "SWIRL rules")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
mpg$model
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
xlab("Month")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- airquality$Month == 5
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch = 24, col = "blue")
points(may$Wind, may$Ozone, pch = 17, col = "blue")
points(may$Wind, may$Ozone, pch = 17, col = "blue", pch = 17)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch = c(17,8), col = c("blue,red"), legend = c("May", "Other months"))
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May", "Other months"))
legend("topright", pch = c(17,8), col = c("blue","red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2)
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar, main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3, mar = c(4, 4, 2, 1)), oma = c(0, 0, 2, 0))
par(mfrow = c(1,3), mar = c(4, 4, 2, 1)), oma = c(0, 0, 2, 0))
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temp")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
install.packages(c("mime", "RcppArmadillo", "RSpectra"))
install.packages("XLConnect")
install.packages("gdata", "xlsx")
install.packages("gdata")
install.packages("xlsx")
install.packages("R Programming")
install.packages("readxl")
install.packages("openxlsx")
library("clisymbols")
clisymbols::symbol
detach("package:clisymbols", unload = TRUE)
library("codetools")
library(hms)
setwd("~/Documents/Projects/household-power-consumption/household-power-consumption")
################################################################################
###  1. Download and extract the data set into the WORKING directory         ###
################################################################################
# 1. If the data set is not loaded, get and clean the data set------------------
search <- ls(pattern = "house.power.comp")
if (length(search) == 0) {
# 1.1 Assign the files' names
file.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.name <- "household_power_consumption.zip"
file.name <- "household_power_consumption.txt"
# 1.2 Download and unzip the data set
if (!file.exists(zip.name)) {
download.file(url = file.url, destfile = zip.name,
method = "curl", quiet = FALSE)
}
if (!file.exists(file.name)) {
unzip(zipfile = zip.name, setTimes = TRUE)
}
# 1.3 Load the first 1000 rows to see the format of each variable
initial <- read.table(file.name, nrows = 1000,
sep = ";",
stringsAsFactors = FALSE,
header = TRUE)
head(initial, n = 10)
# 1.4 Define the variables namess and types
col.names <- colnames(initial)
col.classes <- c("character", "character", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric")
# 1.5 Extract the rows id for Februray 1st and 2nd from the data set
lines <- grep("^1/2/2007|^2/2/2007", readLines(file.name),
value = FALSE)
# 1.5 Import the extracted lines into a data.frame. using the rows id
house.power.comp <- read.table(file = file.name, header = FALSE,
sep = ";", dec = ".",
stringsAsFactors = FALSE,
skip = lines[1] - 1,
nrows = length(lines),
colClasses = col.classes,
na.strings = "?", col.names = col.names)
# 1.6 Clean the data frame
str(house.power.comp)
house.power.comp$Date <- as.Date(house.power.comp$Date,
format = "%d/%m/%Y")
house.power.comp$Date <- with(house.power.comp,
paste(Date, "T", Time, sep = " "))
# 1.7 Assign data.time format (household was located in Sceaux, near Paris)
house.power.comp$Date <- strptime(house.power.comp$Date,
format = c("%Y-%m-%d T %H:%M:%S"),
tz = "Europe/Paris")
# 1.8 Delete downloaded and extracted files to save disk space
file.remove(file.name)
file.remove(zip.name)
}
# 2. Only Keep the clean data.frame in the R environment------------------------
rm(list = setdiff(ls(), "house.power.comp"))
################################################################################
###  1. Download and extract the data set into the WORKING directory         ###
################################################################################
# 1. If the data set is not loaded, get and clean the data set------------------
search <- ls(pattern = "house.power.comp")
if (length(search) == 0) {
# 1.1 Assign the files' names
file.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
zip.name <- "household_power_consumption.zip"
file.name <- "household_power_consumption.txt"
# 1.2 Download and unzip the data set
if (!file.exists(zip.name)) {
download.file(url = file.url, destfile = zip.name,
method = "curl", quiet = FALSE)
}
if (!file.exists(file.name)) {
unzip(zipfile = zip.name, setTimes = TRUE)
}
# 1.3 Load the first 1000 rows to see the format of each variable
initial <- read.table(file.name, nrows = 1000,
sep = ";",
stringsAsFactors = FALSE,
header = TRUE)
head(initial, n = 10)
# 1.4 Define the variables namess and types
col.names <- colnames(initial)
col.classes <- c("character", "character", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric")
# 1.5 Extract the rows id for Februray 1st and 2nd from the data set
lines <- grep("^1/2/2007|^2/2/2007", readLines(file.name),
value = FALSE)
# 1.5 Import the extracted lines into a data.frame. using the rows id
house.power.comp <- read.table(file = file.name, header = FALSE,
sep = ";", dec = ".",
stringsAsFactors = FALSE,
skip = lines[1] - 1,
nrows = length(lines),
colClasses = col.classes,
na.strings = "?", col.names = col.names)
# 1.6 Clean the data frame
str(house.power.comp)
house.power.comp$Date <- as.Date(house.power.comp$Date,
format = "%d/%m/%Y")
house.power.comp$Date <- with(house.power.comp,
paste(Date, "T", Time, sep = " "))
# 1.7 Assign data.time format (household was located in Sceaux, near Paris)
house.power.comp$Date <- strptime(house.power.comp$Date,
format = c("%Y-%m-%d T %H:%M:%S"),
tz = "Europe/Paris")
# 1.8 Delete downloaded and extracted files to save disk space
file.remove(file.name)
file.remove(zip.name)
}
# 2. Only Keep the clean data.frame in the R environment------------------------
rm(list = setdiff(ls(), "house.power.comp"))
house.power.comp$Date
hist(x = house.power.comp$Global_active_power, col = "red",
main = "Global Active Power", xlab = "Global Active Power (Kilowatts)")
plot(house.power.comp$Date, house.power.comp$Global_active_power,
type = "l", ylab = "Global Active Power (kilowatts)", axes = TRUE,
xlab = "")
plot(house.power.comp$Date, house.power.comp$Sub_metering_1,
type = "l", ylab = "Energy sub metering", xlab = "")
points(house.power.comp$Date, house.power.comp$Sub_metering_2, type = "l",
col = "red")
points(house.power.comp$Date, house.power.comp$Sub_metering_3, type = "l",
col = "blue")
legend(x = "topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# 2. Set the four panels for the plot (will be filled by rows)------------------
par(mfrow = c(2,2))
# 3. First plot ----------------------------------------------------------------
plot(house.power.comp$Date, house.power.comp$Global_active_power,
type = "l", ylab = "Global Active Power ", axes = TRUE,
xlab = "")
# 4. Second plot ---------------------------------------------------------------
plot(house.power.comp$Date, house.power.comp$Voltage,
type = "l", ylab = "Voltage", axes = TRUE,
xlab = "datetime")
# 5. Third plot ----------------------------------------------------------------
plot(house.power.comp$Date, house.power.comp$Sub_metering_1,
type = "l", ylab = "Energy sub metering", xlab = "")
points(house.power.comp$Date, house.power.comp$Sub_metering_2, type = "l",
col = "red")
points(house.power.comp$Date, house.power.comp$Sub_metering_3, type = "l",
col = "blue")
legend(x = "topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
y.intersp = 0.9, bty = "n", cex = 0.7)
# 6. Fourth plot ---------------------------------------------------------------
plot(house.power.comp$Date, house.power.comp$Global_reactive_power,
type = "l", ylab = "Global_reactive_power", axes = TRUE,
xlab = "datetime")
